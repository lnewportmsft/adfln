{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adfln"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_ael')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_ael",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "raw/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from dbo.mktzips\r\nselect * from dbo.zcshapes"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ael",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ael",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ael')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_dia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_dia",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "demo/movies.csv"
							},
							{
								"name": "Destination",
								"value": "demo/movies.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_dia",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_dia",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_dia')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_dia')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_unp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_unp",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "raw/SupplyChain_XA_Files.csv"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[xa]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Env": "env",
									"LibraryName": "LibraryName",
									"ObjectName": "ObjectName"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_unp",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_unp",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_unp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_unp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_y4j')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_y4j",
						"type": "ForEach",
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_y4j",
									"type": "Copy",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.tableName}"
										},
										{
											"name": "Destination",
											"value": "raw/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlSource"
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_y4j",
											"type": "DatasetReference",
											"parameters": {
												"cw_tableName": "@item().source.tableName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_y4j",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"tableName": "[concat('[', 'dbo].[mktzips]')]"
								},
								"destination": {
									"fileName": "[concat('[', 'dbo].[mktzips].txt')]"
								}
							},
							{
								"source": {
									"tableName": "[concat('[', 'dbo].[zcshapes]')]"
								},
								"destination": {
									"fileName": "[concat('[', 'dbo].[zcshapes].txt')]"
								}
							}
						]
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_y4j')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_y4j')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currency Converter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Convert Currencies",
						"type": "ExecuteDataFlow",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "TaxiDemo",
								"type": "DataFlowReference"
							},
							"linkedService": {
								"referenceName": "MyDataBricksLinkedService",
								"type": "LinkedServiceReference"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TaxiDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieDemoPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ExecuteMovieDemoDataFlow",
						"type": "ExecuteDataFlow",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "MovieDemo",
								"type": "DataFlowReference"
							},
							"linkedService": {
								"referenceName": "MyDataBricksLinkedService",
								"type": "LinkedServiceReference"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MovieDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "TaxiDemoDataflow",
						"type": "ExecuteDataFlow",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "TaxiDemo",
								"type": "DataFlowReference"
							},
							"linkedService": {
								"referenceName": "MyDataBricksLinkedService",
								"type": "LinkedServiceReference"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TaxiDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CADOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "demo/output/currency"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyDatasetCAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "PreviousConversionRate",
						"type": "Int32"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "DateTime1",
						"type": "DateTime"
					},
					{
						"name": "CurrentConversionRate",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "Currency_CAD.txt",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyDatasetUSD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "PreviousConversionRate",
						"type": "Int32"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "DateTime1",
						"type": "DateTime"
					},
					{
						"name": "CurrentConversionRate",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "Currency_USD.txt",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ael')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "raw"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_dia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "moviesout.csv",
					"folderPath": {
						"value": "@concat('demo/movie_sink/', formatDateTime(trigger().startTime, 'yyyy'), '/', formatDateTime(trigger().startTime, 'MM'), '/', formatDateTime(trigger().startTime, 'dd'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_unp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "env",
						"type": "String"
					},
					{
						"name": "LibraryName",
						"type": "String"
					},
					{
						"name": "ObjectName",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[xa]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_y4j')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "@dataset().cw_fileName",
						"type": "Expression"
					},
					"folderPath": "raw"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ael')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_dia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "movieId",
						"type": "Int64"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "movies.csv",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_unp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Env",
						"type": "Int64"
					},
					{
						"name": "LibraryName",
						"type": "String"
					},
					{
						"name": "ObjectName",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "SupplyChain_XA_Files.csv",
					"folderPath": "raw"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_y4j')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_tableName": {
						"type": "String"
					}
				},
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemoDayStatsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "",
					"folderPath": "demo/day_stats"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemoTotalByPaymentType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "demo/total_by_paymenttype"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemoVendorStatsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "demo/vendor_stats"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/USDOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "demo/output/currency"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/movie_dataflow_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "",
					"folderPath": "demo/movie_sink"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/movie_dataflow_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "movies.csv",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxi_trip_data_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "rate_code",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_time_in_secs",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "trip_data_1.csv",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxi_trip_fare_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": " hack_license",
						"type": "String"
					},
					{
						"name": " vendor_id",
						"type": "String"
					},
					{
						"name": " pickup_datetime",
						"type": "String"
					},
					{
						"name": " payment_type",
						"type": "String"
					},
					{
						"name": " fare_amount",
						"type": "String"
					},
					{
						"name": " surcharge",
						"type": "String"
					},
					{
						"name": " mta_tax",
						"type": "String"
					},
					{
						"name": " tip_amount",
						"type": "String"
					},
					{
						"name": " tolls_amount",
						"type": "String"
					},
					{
						"name": " total_amount",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "trip_fare_1.csv",
					"folderPath": "demo"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currency Converter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"description": "Sample demo data flow to convert currencies showing usage of union, derive and conditional split transformation.",
				"sources": [
					{
						"dataset": {
							"referenceName": "CurrencyDatasetUSD",
							"type": "DatasetReference"
						},
						"name": "USDCurrency",
						"script": "source(output(PreviousConversionRate as double,Country as string,DateTime1 as string,CurrentConversionRate as double),allowSchemaDrift: false,validateSchema: false) ~> USDCurrency"
					},
					{
						"dataset": {
							"referenceName": "CurrencyDatasetCAD",
							"type": "DatasetReference"
						},
						"name": "CADSource",
						"script": "source(output(PreviousConversionRate as double,Country as string,DateTime1 as string,CurrentConversionRate as double),allowSchemaDrift: true,validateSchema: false) ~> CADSource"
					}
				],
				"sinks": [
					{
						"dataset": {
							"referenceName": "USDOutput",
							"type": "DatasetReference"
						},
						"name": "USDSink",
						"script": "ConditionalSplit1@USD sink(saveMode:'overwrite' ) ~> USDSink"
					},
					{
						"dataset": {
							"referenceName": "CADOutput",
							"type": "DatasetReference"
						},
						"name": "CADSink",
						"script": "ConditionalSplit1@CAD sink(saveMode:'overwrite' ) ~> CADSink"
					}
				],
				"transformations": [
					{
						"name": "Union",
						"description": "The Union combines 2 streams together",
						"script": "USDCurrency, CADSource union(byName: true)~> Union"
					},
					{
						"name": "NewCurrencyColumn",
						"description": "Create a new calculated column from currency rate",
						"script": "Union derive(NewCurrencyRate = round(CurrentConversionRate*1.25)) ~> NewCurrencyColumn"
					},
					{
						"name": "ConditionalSplit1",
						"description": "Split the data on state to create 2 streams",
						"script": "NewCurrencyColumn split(Country == 'USD',Country == 'CAD',disjoint: false) ~> ConditionalSplit1@(USD, CAD)"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CurrencyDatasetUSD')]",
				"[concat(variables('factoryId'), '/datasets/CurrencyDatasetCAD')]",
				"[concat(variables('factoryId'), '/datasets/USDOutput')]",
				"[concat(variables('factoryId'), '/datasets/CADOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieDemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"description": "Sample demo data flow to transform movie data showing usage of derive transformation.",
				"sources": [
					{
						"dataset": {
							"referenceName": "movie_dataflow_source",
							"type": "DatasetReference"
						},
						"name": "Movies",
						"script": "source(output(movieId as string,title as string,genres as string),allowSchemaDrift: true,validateSchema: false) ~> Movies"
					}
				],
				"sinks": [
					{
						"dataset": {
							"referenceName": "movie_dataflow_sink",
							"type": "DatasetReference"
						},
						"name": "Output",
						"script": "MoviesYear sink(saveMode:'overwrite' ) ~> Output"
					}
				],
				"transformations": [
					{
						"name": "MoviesYear",
						"script": "Movies derive(year = toInteger(trim(right(title, 6), '()')),title = toString(left(title, length(title)-6))) ~> MoviesYear"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/movie_dataflow_source')]",
				"[concat(variables('factoryId'), '/datasets/movie_dataflow_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"description": "Sample demo data flow to transform taxi data showing usage of join and aggregate transformation.",
				"sources": [
					{
						"dataset": {
							"referenceName": "taxi_trip_data_input",
							"type": "DatasetReference"
						},
						"name": "TripData",
						"script": "source(output(medallion as string,hack_license as string,vendor_id as string,rate_code as string,store_and_fwd_flag as string,pickup_datetime as string,dropoff_datetime as string,passenger_count as short,trip_time_in_secs as long,trip_distance as double,pickup_longitude as double,pickup_latitude as double,dropoff_longitude as double,dropoff_latitude as double),allowSchemaDrift: false,validateSchema: false) ~> TripData"
					},
					{
						"dataset": {
							"referenceName": "taxi_trip_fare_input",
							"type": "DatasetReference"
						},
						"name": "TripFare",
						"script": "source(output(medallion as string,{ hack_license} as string,{ vendor_id} as string,{ pickup_datetime} as string,{ payment_type} as string,{ fare_amount} as double,{ surcharge} as double,{ mta_tax} as double,{ tip_amount} as double,{ tolls_amount} as double,{ total_amount} as double),allowSchemaDrift: false,validateSchema: false) ~> TripFare"
					}
				],
				"sinks": [
					{
						"dataset": {
							"referenceName": "TaxiDemoVendorStatsSink",
							"type": "DatasetReference"
						},
						"name": "VendorStatsSink",
						"script": "AggregateVendorStats sink(saveMode:'overwrite' ) ~> VendorStatsSink"
					},
					{
						"dataset": {
							"referenceName": "TaxiDemoDayStatsSink",
							"type": "DatasetReference"
						},
						"name": "DayStatsSink",
						"script": "AggregateDayStats sink(saveMode:'overwrite' ) ~> DayStatsSink"
					},
					{
						"dataset": {
							"referenceName": "TaxiDemoTotalByPaymentType",
							"type": "DatasetReference"
						},
						"name": "TotalPaymentByPaymentType",
						"script": "AggregateByPaymentType sink(saveMode:'overwrite' ) ~> TotalPaymentByPaymentType"
					}
				],
				"transformations": [
					{
						"name": "JoinMatchedData",
						"script": "TripData, TripFare join(hack_license == { hack_license}&& TripData@medallion == TripFare@medallion&& vendor_id == { vendor_id}&& pickup_datetime == { pickup_datetime},joinType:'inner',broadcast: 'none')~> JoinMatchedData"
					},
					{
						"name": "AggregateVendorStats",
						"script": "JoinMatchedData aggregate(groupBy(vendor_id = vendor_id),passenger_count = round(sum(passenger_count), 2),trip_time_in_secs = round(sum(trip_time_in_secs)/60, 2),trip_distance = round(sum(trip_distance), 2),TotalTripFare = round(sum({ total_amount}), 2)) ~> AggregateVendorStats"
					},
					{
						"name": "AggregateDayStats",
						"script": "JoinMatchedData aggregate(groupBy(DayOfTheWeek = dayOfWeek(toDate(pickup_datetime, 'yyyy-mm-dd hh:mm:ss'))),trip_distance = round(avg(trip_distance), 2),passenger_count = round(avg(passenger_count), 2),trip_time_in_secs = round(avg(trip_time_in_secs)/60, 2),average_fare = round(avg({ total_amount}), 2)) ~> AggregateDayStats"
					},
					{
						"name": "AggregateByPaymentType",
						"script": "TripFare aggregate(groupBy({ payment_type} = { payment_type}),each(match(type=='double'), concat($$, '_total') = round(sum ($$)))) ~> AggregateByPaymentType"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/taxi_trip_data_input')]",
				"[concat(variables('factoryId'), '/datasets/taxi_trip_fare_input')]",
				"[concat(variables('factoryId'), '/datasets/TaxiDemoVendorStatsSink')]",
				"[concat(variables('factoryId'), '/datasets/TaxiDemoDayStatsSink')]",
				"[concat(variables('factoryId'), '/datasets/TaxiDemoTotalByPaymentType')]"
			]
		}
	]
}